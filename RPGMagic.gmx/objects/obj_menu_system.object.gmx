<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_battle_menu</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create menu system variables
select_pos = 0;
select_value = noone;
map_value = noone;
current_menu_name = obj_menu_system;
targetting = false;
menu_depth = 0;

menu = ds_list_create();
ds_list_add(menu, "Fight", "Magic", "Skills");

current_menu = ds_list_create();
ds_list_copy(current_menu, self.menu);

menu_map = ds_map_create();
ds_map_add(menu_map, "Magic", obj_magic);
ds_map_add(menu_map, "Black Magic", obj_black_magic);
ds_map_add(menu_map, "Skills", obj_skills);
ds_map_add(menu_map, "Back", obj_menu_system);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Control menu
if(keyboard_check_pressed(vk_down) &amp;&amp; (!targetting)) {
    if(select_pos &lt; ds_list_size(current_menu)-1) {
        select_pos++;
    } else {
        select_pos = 0;
    }
}

if(keyboard_check_pressed(vk_up)) {
    if(select_pos &gt; 0) {
        select_pos--;
    } else {
        select_pos = ds_list_size(current_menu)-1;
    }
}

if(keyboard_check_pressed(vk_enter)) {
    select_value = ds_list_find_value(current_menu, select_pos);
    map_value = menu_map[? select_value];
    
    if(!is_undefined(map_value)) {
        if(map_value.menu_depth &gt; 1) {
            ds_map_replace(menu_map, "Back", current_menu_name);
        } else {
            ds_map_replace(menu_map, "Back", obj_menu_system);
        }
        
        select_pos = 0;
        targetting = false;
        current_menu_name = map_value;
        ds_list_copy(current_menu, map_value.menu);
    } else {
        targetting = true;
    }
}

if(keyboard_check_pressed(vk_escape) || mouse_check_button_pressed(mb_right)) {
    targetting = false;   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy lists
ds_list_destroy(menu);
ds_list_destroy(current_menu);
ds_map_destroy(menu_map);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw gui
draw_set_color(c_black);
draw_text(20, 20, "select_pos: " + string(select_pos));
draw_text(20, 40, "targetting: " + string(targetting));
draw_text(20, 60, "select_value: " + string(select_value));
draw_text(20, 80, "prev_menu: " + object_get_name(menu_map[? "Back"]));
draw_text(20, 100, "current_menu_name: " + object_get_name(current_menu_name));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw menu
draw_self();
draw_set_color(c_white);

for(var i = 0; i &lt; ds_list_size(current_menu); i++) {

    if(i == select_pos) {
        draw_set_font(font_bold);
        draw_text(x+10,y+(i*15)+15, "&gt;" + ds_list_find_value(current_menu, i));
        draw_set_font(-1);
    } else {
        draw_text(x+10,y+(i*15)+15, ds_list_find_value(current_menu, i));
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
